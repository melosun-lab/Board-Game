[{"/Users/zhenxu/Desktop/board-game/frontend/src/index.js":"1","/Users/zhenxu/Desktop/board-game/frontend/src/Root.js":"2","/Users/zhenxu/Desktop/board-game/frontend/src/serviceWorker.js":"3","/Users/zhenxu/Desktop/board-game/frontend/src/withRoot.js":"4","/Users/zhenxu/Desktop/board-game/frontend/src/components/Auth/index.js":"5","/Users/zhenxu/Desktop/board-game/frontend/src/components/Auth/Login.js":"6","/Users/zhenxu/Desktop/board-game/frontend/src/components/Auth/Register.js":"7","/Users/zhenxu/Desktop/board-game/frontend/src/components/Shared/Error.js":"8"},{"size":1329,"mtime":1609725283504,"results":"9","hashOfConfig":"10"},{"size":815,"mtime":1609725283502,"results":"11","hashOfConfig":"10"},{"size":4948,"mtime":1608857125045,"results":"12","hashOfConfig":"10"},{"size":1163,"mtime":1608857125045,"results":"13","hashOfConfig":"10"},{"size":340,"mtime":1609725283503,"results":"14","hashOfConfig":"10"},{"size":4055,"mtime":1609725283503,"results":"15","hashOfConfig":"10"},{"size":8514,"mtime":1609725283503,"results":"16","hashOfConfig":"10"},{"size":665,"mtime":1609725283504,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"2v2ize",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhenxu/Desktop/board-game/frontend/src/index.js",["36"],"/Users/zhenxu/Desktop/board-game/frontend/src/Root.js",[],["37","38"],"/Users/zhenxu/Desktop/board-game/frontend/src/serviceWorker.js",[],"/Users/zhenxu/Desktop/board-game/frontend/src/withRoot.js",[],"/Users/zhenxu/Desktop/board-game/frontend/src/components/Auth/index.js",[],"/Users/zhenxu/Desktop/board-game/frontend/src/components/Auth/Login.js",[],"/Users/zhenxu/Desktop/board-game/frontend/src/components/Auth/Register.js",["39"],"import React, { useState } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport VerifiedUserTwoTone from \"@material-ui/icons/VerifiedUserTwoTone\";\nimport { create } from \"jss\";\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nconst Register = ({ classes, setNewUser }) => {\n  const [username, setUsername] = useState(\"\")\n  const [nickname, setNickname] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [open, setOpen] = useState(false)\n\n  const handleSubmit = (event, createUser) => {\n    event.preventDefault()\n    createUser()\n  }\n  \n  return (\n  <div className = {classes.root}>\n    <Paper className = {classes.paper}>\n      <Avatar className = {classes.avatar}>\n        <Gavel />\n      </Avatar>  \n      <Typography variant = \"headline\">\n        Register\n      </Typography>\n      <Mutation \n        mutation = {REGISTER_MUTATION} \n        variables={{ username, nickname, password }} \n        onCompleted={data => {\n          console.log({ data })\n          setOpen(true)\n        }}\n      >\n        {(createUser, { loading, error }) => {\n          return(\n            <form onSubmit={event => handleSubmit(event, createUser)} className = {classes.form}>\n              <FormControl margin = \"normal\" required fullWidth>\n                <InputLabel htmlFor = \"username\">\n                  Username\n                </InputLabel>\n                <Input id = \"username\" onChange = {event => setUsername(event.target.value)}/>\n              </FormControl>\n              <FormControl margin = \"normal\" required fullWidth>\n                <InputLabel htmlFor = \"nickname\">\n                  Nickname\n                </InputLabel>\n                <Input id = \"nickname\" onChange = {event => setNickname(event.target.value)}/>\n              </FormControl>\n              <FormControl margin = \"normal\" required fullWidth>\n                <InputLabel htmlFor = \"password\">\n                  Password\n                </InputLabel>\n                <Input id = \"password\" type = \"password\" onChange = {event => setPassword(event.target.value)}/>\n              </FormControl>\n              <Button\n                type = \"submit\"\n                fullWidth\n                variant = \"contained\"\n                color = \"secondary\"\n                disabled={loading || !username.trim() || !nickname.trim() || !password.trim()}\n                className = {classes.submit}>\n                  {loading ? \"Registering...\" : \"Register\"}\n              </Button>\n              <Button\n                onClick={() => setNewUser(false)}\n                color = \"primary\"\n                variant = \"outlined\"\n                fullWidth\n              >\n                Previous user? Log in here\n              </Button>\n              {/* Error Handling */}\n              {error && <div>Error</div>}\n            </form>\n          )\n        }}\n      </Mutation> \n    </Paper>\n\n    {/* Success Dialog */}\n    < Dialog\n      open={open}\n      disableBackdropClick={true}\n      TransitionComponent={Transition}\n    >\n      <DialogTitle>\n        <VerifiedUserTwoTone className={classes.icon} />\n        New Account\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          User {username} successfully created!\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => setNewUser(false)}>\n          Login\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n    );\n};\n\nconst REGISTER_MUTATION = gql`\nmutation ($username: String!, $nickname: String!, $password:String!){\n  createUser(username:$username, nickname:$nickname, password:$password){\n    user{\n      username\n      nickname\n      \n\t\t}\n  }\n}\n`\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit * 2\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n    color: theme.palette.openTitle\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  },\n  icon: {\n    padding: \"0px 2px 2px 0px\",\n    verticalAlign: \"middle\",\n    color: \"green\"\n  }\n});\n\nexport default withStyles(styles)(Register);\n","/Users/zhenxu/Desktop/board-game/frontend/src/components/Shared/Error.js",[],{"ruleId":"40","severity":1,"message":"41","line":6,"column":24,"nodeType":"42","messageId":"43","endLine":6,"endColumn":39},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"40","severity":1,"message":"48","line":20,"column":10,"nodeType":"42","messageId":"43","endLine":20,"endColumn":16},"no-unused-vars","'createOperation' is defined but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'create' is defined but never used.","no-global-assign","no-unsafe-negation"]