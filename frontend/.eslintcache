[{"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/index.js":"1","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/Root.js":"2","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/serviceWorker.js":"3","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Auth/index.js":"4","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/withRoot.js":"5","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/pages/Profile.js":"6","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/pages/App.js":"7","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Shared/Header.js":"8","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Auth/Login.js":"9","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Auth/Register.js":"10","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Auth/Signout.js":"11","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Shared/Error.js":"12","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Shared/GameStarter.js":"13","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Shared/Loading.js":"14","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/CreateRoom.js":"15","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/RoomList.js":"16","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/UpdateRoom.js":"17","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/DeleteRoom.js":"18","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/JoinRoom.js":"19"},{"size":1329,"mtime":1610061487680,"results":"20","hashOfConfig":"21"},{"size":1399,"mtime":1610061514934,"results":"22","hashOfConfig":"21"},{"size":4948,"mtime":1610061487680,"results":"23","hashOfConfig":"21"},{"size":340,"mtime":1610061487678,"results":"24","hashOfConfig":"21"},{"size":1163,"mtime":1610061487680,"results":"25","hashOfConfig":"21"},{"size":1477,"mtime":1610078563088,"results":"26","hashOfConfig":"21"},{"size":1115,"mtime":1610078563422,"results":"27","hashOfConfig":"21"},{"size":1743,"mtime":1610061487680,"results":"28","hashOfConfig":"21"},{"size":4055,"mtime":1610061487678,"results":"29","hashOfConfig":"21"},{"size":11130,"mtime":1610078563422,"results":"30","hashOfConfig":"21"},{"size":1025,"mtime":1610061487678,"results":"31","hashOfConfig":"21"},{"size":665,"mtime":1610061487679,"results":"32","hashOfConfig":"21"},{"size":107,"mtime":1610061487679,"results":"33","hashOfConfig":"21"},{"size":443,"mtime":1610061487680,"results":"34","hashOfConfig":"21"},{"size":5037,"mtime":1610078563422,"results":"35","hashOfConfig":"21"},{"size":2566,"mtime":1610061722628,"results":"36","hashOfConfig":"21"},{"size":1406,"mtime":1610061487679,"results":"37","hashOfConfig":"21"},{"size":245,"mtime":1610061487679,"results":"38","hashOfConfig":"21"},{"size":444,"mtime":1610078581760,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1rujqum",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/index.js",["82"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {ApolloProvider, Query} from 'react-apollo';\nimport ApolloClient, { createOperation, gql } from 'apollo-boost';\nimport Root from \"./Root\";\nimport Auth from './components/Auth';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:8000/graphql/',\n    fetchOptions: {\n        credentials: \"include\"\n    },\n    request: operation => {\n        const token = localStorage.getItem('authToken') || \"\"\n        operation.setContext({\n            headers: {\n                Authorization: `JWT ${token}`\n            }\n        })\n    },\n    clientState: {\n        defaults: {\n            isLoggedIn: !!localStorage.getItem('authToken')\n        }\n    }\n})\n\nconst IS_LOGGED_IN_QUERY = gql`\n    query {\n        isLoggedIn @client\n    }\n`\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Query query={IS_LOGGED_IN_QUERY}>\n            {({ data }) => data.isLoggedIn ? <Root /> : <Auth />}\n        </Query>\n    </ApolloProvider>\n    , document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["83","84"],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/Root.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/serviceWorker.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Auth/index.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/withRoot.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/pages/Profile.js",["85","86","87","88","89","90"],"import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// import Card from \"@material-ui/core/Card\";\n// import CardHeader from \"@material-ui/core/CardHeader\";\n// import Avatar from \"@material-ui/core/Avatar\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Typography from \"@material-ui/core/Typography\";\n// import ThumbUpIcon from \"@material-ui/icons/ThumbUpTwoTone\";\n// import AudiotrackIcon from \"@material-ui/icons/AudiotrackTwoTone\";\n// import Divider from \"@material-ui/core/Divider\";\n\nconst Profile = ({ classes }) => {\n  return <div>Profile</div>;\n};\n\nconst styles = theme => ({\n  paper: {\n    width: \"auto\",\n    display: \"block\",\n    padding: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 650,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing.unit * 2\n  },\n  audioIcon: {\n    color: \"purple\",\n    fontSize: 30,\n    marginRight: theme.spacing.unit\n  },\n  thumbIcon: {\n    color: \"green\",\n    marginRight: theme.spacing.unit\n  },\n  divider: {\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  }\n});\n\nexport default withStyles(styles)(Profile);\n","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/pages/App.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Shared/Header.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Auth/Login.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Auth/Register.js",["91"],"import React, { useState } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Mutation } from 'react-apollo';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { FormHelperText } from '@material-ui/core';\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport VerifiedUserTwoTone from \"@material-ui/icons/VerifiedUserTwoTone\";\nimport { create } from \"jss\";\nimport Error from \"../Shared/Error\"\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />\n}\n\nfunction GetRandomName() {\n  const first = firstNickname[Math.floor(Math.random() * firstNickname.length)]\n  const last = lastNickName[Math.floor(Math.random() * lastNickName.length)]\n  return first+last\n}\n\nconst Register = ({ classes, setNewUser }) => {\n  const [username, setUsername] = useState(\"\")\n  const [nickname, setNickname] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [validatePassword, setValidatePassword] = useState(\"\")\n  const [open, setOpen] = useState(false)\n  const [passwordErr, setPasswordErr] = useState(false)\n  const [usernameExist, setUsernameExist] = useState(false)\n  const [checkUsername, setCheckUsername] = useState(false)\n\n  const handleSubmit = (event, createUser) => {\n    event.preventDefault()\n    createUser()\n  }\n\n  const handleValidateUsername = (event) => {\n    setCheckUsername(true)\n    setUsername(event.target.value)\n  }\n\n  const handleValidatePassword = (event) => {\n\n    if(event.target.id === \"validatePassword\"){\n      setValidatePassword(event.target.value)\n      if (event.target.value !== password && !passwordErr){\n        setPasswordErr(true)\n      }\n      if (event.target.value === password || event.target.value === \"\"){\n        setPasswordErr(false)\n      }\n    }\n    else{ // password\n      setPassword(event.target.value)\n      if (validatePassword !== \"\" && event.target.value !== validatePassword && !passwordErr){\n        setPasswordErr(true)\n      }\n      if (event.target.value === validatePassword){\n        setPasswordErr(false)\n      }\n    }\n  }\n  \n  return (\n  <div className = {classes.root}>\n    <Paper className = {classes.paper}>\n      <Avatar className = {classes.avatar}>\n        <Gavel />\n      </Avatar>  \n      <Typography variant = \"headline\">\n        Register\n      </Typography>\n      <Mutation \n        mutation = {REGISTER_MUTATION} \n        variables={{ username, nickname, password, email }} \n        onCompleted={data => {\n          console.log({ data })\n          setOpen(true)\n        }}\n      >\n        {(createUser, { loading, error }) => {\n          return(\n            <form onSubmit={event => handleSubmit(event, createUser)} className = {classes.form}>\n              <FormControl error={usernameExist} margin = \"normal\" required fullWidth>\n                <InputLabel htmlFor = \"username\">\n                  Username\n                </InputLabel>\n                <Input id = \"username\" onBlur = {event => handleValidateUsername(event)}/>\n                {checkUsername && <Query query={USERNAME_QUERY} variables={{ username: username }}>\n                  {({ data, loading, error }) => {\n                      if (loading) return <div>Loading</div>\n                      if (error) return <div>Error</div>\n                      setCheckUsername(false)\n                      setUsernameExist(data.exist)\n                      return (null)\n                    }}\n                  </Query>} \n                {usernameExist && <FormHelperText error>{\"Username already exist\"}</FormHelperText>}\n              </FormControl>\n              <FormControl margin = \"normal\" required fullWidth>\n                <InputLabel htmlFor = \"email\">\n                  Email\n                </InputLabel>\n                <Input id = \"email\" onChange = {event => setEmail(event.target.value)}/>\n              </FormControl>\n              <FormControl margin = \"normal\" fullWidth>\n                <InputLabel htmlFor = \"nickname\">\n                  Nickname\n                </InputLabel>\n                <Input id = \"nickname\" onChange = {event => setNickname(event.target.value)}/>\n              </FormControl>\n              <FormControl margin = \"normal\" required fullWidth>\n                <InputLabel htmlFor = \"password\">\n                  Password\n                </InputLabel>\n                <Input id = \"password\" type = \"password\" onBlur = {event => handleValidatePassword(event)}/>\n              </FormControl>\n              <FormControl error={passwordErr} margin = \"normal\" required fullWidth>\n                <InputLabel htmlFor = \"validatePassword\">\n                  Confirm Password\n                </InputLabel>\n                <Input id = \"validatePassword\" type = \"password\" onBlur = {event => handleValidatePassword(event)}/>\n                {passwordErr && <FormHelperText error>{\"Password not the same\"}</FormHelperText>}\n              </FormControl>\n              <Button\n                type = \"submit\"\n                fullWidth\n                variant = \"contained\"\n                color = \"secondary\"\n                onClick = {() => {\n                  nickname === \"\" && setNickname(GetRandomName)\n                }}\n                disabled={loading || !username.trim() || !password.trim() || (password !== validatePassword) || usernameExist}\n                className = {classes.submit}>\n                  {loading ? \"Registering...\" : \"Register\"}\n              </Button>\n              <Button\n                onClick={() => setNewUser(false)}\n                color = \"primary\"\n                variant = \"outlined\"\n                fullWidth\n              >\n                Previous user? Log in here\n              </Button>\n              {/* Error Handling */}\n              {error && <Error error={error}/>}\n            </form>\n          )\n        }}\n      </Mutation> \n    </Paper>\n\n      {/* Success Dialog */}\n      < Dialog\n        open={open}\n        disableBackdropClick={true}\n        TransitionComponent={Transition}\n      >\n        <DialogTitle>\n          <VerifiedUserTwoTone className={classes.icon} />\n          New Account\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            User {username} successfully created!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" variant=\"contained\" onClick={() => setNewUser(false)}>\n            Login\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    );\n};\n\nconst REGISTER_MUTATION = gql`\nmutation ($username: String!, $nickname: String!, $password:String!, $email:String!){\n  createUser(username:$username, nickname:$nickname, password:$password, email:$email){\n    user{\n      username\n      nickname\n\t\t}\n  }\n}\n`\n\nconst USERNAME_QUERY = gql`\nquery ($username: String!){\n  exist(username: $username)\n}\n`\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit * 2\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n    color: theme.palette.openTitle\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  },\n  icon: {\n    padding: \"0px 2px 2px 0px\",\n    verticalAlign: \"middle\",\n    color: \"green\"\n  }\n});\n\nexport default withStyles(styles)(Register);\n\n\nconst firstNickname = [\n  \"admirer\",\n  \"arm\",\n  \"axe\",\n  \"back\",\n  \"bane\",\n  \"baker\",\n  \"basher\",\n  \"beard\",\n  \"bearer\",\n  \"bender\",\n  \"blade\",\n  \"bleeder\",\n  \"blender\",\n  \"blood\",\n  \"boiler\",\n  \"bone\",\n  \"boot\",\n  \"borer\",\n  \"born\",\n  \"bow\",\n  \"breaker\",\n  \"breeder\",\n  \"bringer\",\n  \"brow\",\n  \"builder\",\n  \"chaser\",\n  \"chiller\",\n  \"collar\",\n  \"counter\",\n  \"curser\",\n  \"dancer\",\n  \"deck\",\n  \"dottir\",\n  \"doubter\",\n  \"dreamer\",\n  \"drinker\",\n  \"drowner\",\n  \"ear\",\n  \"eater\",\n  \"face\",\n  \"fearer\",\n  \"friend\",\n  \"foot\",\n  \"fury\",\n  \"gorer\",\n  \"grim\",\n  \"grinder\",\n  \"grower\",\n  \"growth\",\n  \"hacker\",\n  \"hall\",\n  \"hammer\",\n  \"hand\",\n  \"hands\",\n  \"head\",\n  \"hilt\",\n  \"hugger\",\n  \"hunter\",\n  \"killer\",\n  \"leg\",\n  \"licker\",\n  \"liker\",\n  \"lost\",\n  \"lover\",\n  \"maker\",\n  \"mender\",\n  \"minder\",\n  \"miner\",\n  \"mocker\",\n  \"monger\",\n  \"neck\",\n  \"puncher\",\n  \"rage\",\n  \"rhyme\",\n  \"rider\",\n  \"ringer\",\n  \"roarer\",\n  \"roller\",\n  \"sailor\",\n  \"screamer\",\n  \"sequel\",\n  \"server\",\n  \"shield\",\n  \"shoe\",\n  \"singer\",\n  \"skinner\",\n  \"slinger\",\n  \"slugger\",\n  \"sniffer\",\n  \"son\",\n  \"smasher\",\n  \"speaker\",\n  \"stinker\",\n  \"sucker\",\n  \"sword\",\n  \"tail\",\n  \"tamer\",\n  \"taster\",\n  \"thigh\",\n  \"tongue\",\n  \"tosser\",\n  \"tracker\",\n  \"washer\",\n  \"wielder\",\n  \"wing\",\n  \"wisher\",\n  \"wrath\"\n]\n\nconst lastNickName = [\n  \"Aesir\",\n  \"Axe\",\n  \"Battle\",\n  \"Bear\",\n  \"Berg\",\n  \"Biscuit\",\n  \"Black\",\n  \"Blade\",\n  \"Blood\",\n  \"Blue\",\n  \"Boar\",\n  \"Board\",\n  \"Bone\",\n  \"Cage\",\n  \"Cave\",\n  \"Chain\",\n  \"Cloud\",\n  \"Coffee\",\n  \"Code\",\n  \"Death\",\n  \"Dragon\",\n  \"Dwarf\",\n  \"Eel\",\n  \"Egg\",\n  \"Elk\",\n  \"Fire\",\n  \"Fjord\",\n  \"Flame\",\n  \"Flour\",\n  \"Forge\",\n  \"Fork\",\n  \"Fox\",\n  \"Frost\",\n  \"Furnace\",\n  \"Cheese\",\n  \"Giant\",\n  \"Glacier\",\n  \"Goat\",\n  \"God\",\n  \"Gold\",\n  \"Granite\",\n  \"Griffon\",\n  \"Grim\",\n  \"Haggis\",\n  \"Hall\",\n  \"Hamarr\",\n  \"Helm\",\n  \"Horn\",\n  \"Horse\",\n  \"House\",\n  \"Huskarl\",\n  \"Ice\",\n  \"Iceberg\",\n  \"Icicle\",\n  \"Iron\",\n  \"Jarl\",\n  \"Kelp\",\n  \"Kettle\",\n  \"Kraken\",\n  \"Lake\",\n  \"Light\",\n  \"Long\",\n  \"Mace\",\n  \"Mead\",\n  \"Maelstrom\",\n  \"Mail\",\n  \"Mammoth\",\n  \"Man\",\n  \"Many\",\n  \"Mountain\",\n  \"Mutton\",\n  \"Noun\",\n  \"Oath\",\n  \"One\",\n  \"Owl\",\n  \"Pain\",\n  \"Peak\",\n  \"Pine\",\n  \"Pot\",\n  \"Rabbit\",\n  \"Rat\",\n  \"Raven\",\n  \"Red\",\n  \"Refreshingbeverage\",\n  \"Ring\",\n  \"Rime\",\n  \"Rock\",\n  \"Root\",\n  \"Rune\",\n  \"Salmon\",\n  \"Sap\",\n  \"Sea\",\n  \"Seven\",\n  \"Shield\",\n  \"Ship\",\n  \"Silver\",\n  \"Sky\",\n  \"Slush\",\n  \"Smoke\",\n  \"Snow\",\n  \"Spear\",\n  \"Squid\",\n  \"Steam\",\n  \"Stone\",\n  \"Storm\",\n  \"Swine\",\n  \"Sword\",\n  \"Three\",\n  \"Tongue\",\n  \"Torch\",\n  \"Troll\",\n  \"Two\",\n  \"Ulfsark\",\n  \"Umlaut\",\n  \"Unsightly\",\n  \"Valkyrie\",\n  \"Wave\",\n  \"White\",\n  \"Wolf\",\n  \"Woman\",\n  \"Worm\",\n  \"Wyvern\"\n]\n","/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Auth/Signout.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Shared/Error.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Shared/GameStarter.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Shared/Loading.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/CreateRoom.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/RoomList.js",["92"],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/UpdateRoom.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/DeleteRoom.js",[],"/Users/mingkunsun/Documents/GitHub/board-game/frontend/src/components/Room/JoinRoom.js",[],{"ruleId":"93","severity":1,"message":"94","line":6,"column":24,"nodeType":"95","messageId":"96","endLine":6,"endColumn":39},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"101","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":12},{"ruleId":"93","severity":1,"message":"102","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":13},{"ruleId":"93","severity":1,"message":"103","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":19},{"ruleId":"93","severity":1,"message":"104","line":17,"column":10,"nodeType":"95","messageId":"96","endLine":17,"endColumn":33},{"ruleId":"93","severity":1,"message":"105","line":17,"column":35,"nodeType":"95","messageId":"96","endLine":17,"endColumn":46},{"ruleId":"93","severity":1,"message":"106","line":18,"column":8,"nodeType":"95","messageId":"96","endLine":18,"endColumn":19},{"ruleId":"93","severity":1,"message":"107","line":22,"column":10,"nodeType":"95","messageId":"96","endLine":22,"endColumn":16},{"ruleId":"93","severity":1,"message":"108","line":16,"column":8,"nodeType":"95","messageId":"96","endLine":16,"endColumn":18},"no-unused-vars","'createOperation' is defined but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'Card' is defined but never used.","'Paper' is defined but never used.","'ThumbUpIcon' is defined but never used.","'createGenerateClassName' is defined but never used.","'FormControl' is defined but never used.","'GameStarter' is defined but never used.","'create' is defined but never used.","'CreateRoom' is defined but never used.","no-global-assign","no-unsafe-negation"]